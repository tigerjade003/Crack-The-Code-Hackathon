import hashlib
from datetime import datetime
from encryption import gethash

from encrypt_decrypt import generate_key, connection, encrypt, decrypt_message


#example data = ("apple", "banana")

class Block:  
    def __init__(self, index, previous_hash, data, timestamp):
        #index tells position or number value assigned to block
        self.index = index
        self.previous_hash = previous_hash
        self.data = data
        self.timestamp = timestamp
        self.hash = calhash

    def calhash(self):
        converted = hashlib.sha256()
        converted.update(str(self.index).encode('utf-8') +
                   str(self.previous_hash).encode('utf-8') +
                   str(self.data).encode('utf-8') +
                   str(self.timestamp).encode('utf-8'))
        return converted.hexdigest()


        
        
class Blockchain:
    def __init__(self):
        self.chain = []
        self.create_base_block()
    def create_base_block(self):
        base_block = Block(0, "0", "Start Block", datetime.now())
        base_block.hash = base_block.calhash()
        self.chain.append(base_block)

    def latest_block(self):
        return self.chain[-1]

    def add_block(self, data):
        new_block = self.latest_block()
        new_index = latest_block.index + 1
        new_timestamp = datetime.now()



  

















